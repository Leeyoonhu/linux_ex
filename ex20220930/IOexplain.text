** Shell 기본 사용방법 **

- 출력 redirection >, >>
- 정상출력 : 1, 오류 : 2

- > : 덮어쓰기, >> : 파일에 내용추가하기 (출력만 저장, 오류시에 저장하지않음)
// ex) date >> out1 (덮어쓰기)
// cat out1

- 실수로 중요한 파일에 덮어쓰기 방지 : set -o noclobber
// ex) set -o noclobber
// ls > out1 (덮어 쓸 수 없다는 오류 문구 출력됨)

- 설정을 해제하려면 + 옵션 사용
// ex) set +o noclobber
// ls > out1 (덮어쓰기 가능)

- Error redirection (기본적으로 표준 출력, 파일 저장x)
// ex) ls /abc
// ls : (오류)'/abc' 에 접근할 수 없습니다. 그런 파일이나 디렉터리가 없습니다

- 만약 error도 저장하고 싶다면? 오류일경우도 추가해주면 가능
// ex) ls /abc 2> ls.err (오류일 때 ls.err에 덮어쓰기)
// cat ls.err => ls : '/abc' 에 접근할 수 없습니다. 그런 파일이나 디렉터리가 없습니다
// 오류문구가 ls.err에 저장되었음을 확인

- 표준 출력 & 오류를 한번에 redirection (출력일경우, 오류일경우)
// ex) ls ./abc>ls.out1 2>ls.err1
// (abc가 없어 오류가 발생했으므로 err1에 저장)

- 표준 출력 & 오류를 한 파일에 저장하기 ( 2>&1 )
// ex) ls ./abc > ls.out 2>&1

- 입력 redirection <
// ex) cat out
// out 에 있는 애들 엿보기
// ==> cat 0< out, cat < out

------ 실습 문제 ------
1. 현재 디렉터리에서 l로 시작하는 모든 파일 확인 후 lab.out으로 저장하기
$ ls l* > lab.out 

2. 임시 사용할 temp 생성
$ mkdir temp

3. l로 시작하는 모든 파일 temp로 이동
$ mv l* temp

4. date 명령 실행결과를 lab.out 에 추가하기
$ date >> lab.out


